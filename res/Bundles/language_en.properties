# == config ==
lang=en
dir=LEFT_TO_RIGHT

# == general ==
enterButton = Enter
cancelButton = Cancel
continueWithPolyButton = Continue with Polynomial
error = Error
invalidInputs = Invalid Inputs
solveButton = Solve
okButton = OK
chooseMethod = Choose a method
confirmButton = Confirm
generateButton = Generate
moreInfo = More info
aboutTitle = About
aboutDescription = <html> Created by Abd_HM  ;-) <br> Full program documentation on my GitHub  <br> </html>
contact = Contact me
defaultButton = Default
continueButton = Continue

# == start menu ==
interpolationTitle = Interpolation
interpolationDescription = Interpolate an entered function using numeric interpolation ways like General Method, Lagrange, Newton-Gregory, Least-Squares
integralTitle = Integral
integralDescription = Integrate an entered function using numeric integration ways
differentiationTitle = Differentiation
differentiationDescription = Differentiate an entered function using numeric differentiation ways
differentialTitle = Differential
differentialDescription = Solve an entered differential equations using numeric ways
nonLinearEquationsTitle = Non-Linear Equations
nonLinearEquationsDescription = Solve an entered non-Linear equations using numeric ways
systemOfNonLinearEquationsTitle = System Of Non-Linear Equations
systemOfNonLinearEquationsDescription = Solve an entered system of non-Linear equations using numeric ways
polynomialsTitle = Polynomials
polynomialsDescription = Do several tasks on an entered polynomial using numeric ways

# == choose function menu ==
expressionFunctionTitle = Expression Function
expressionFunctionDescription = Functions like x^2+3, sin(x), exp(x) ...
pointsFunctionTitle =Points Function
pointsFunctionDescription =  Functions like x0=.. y0=.. , x1=.. y1=..
polynomialFunctionTitle  = Polynomial Function
polynomialFunctionDescription = Functions like p(x) = a0 + a1*x + a2*x^2 ...

# == Interpolation menu ==
interpolationAnswer = Interpolation answer using
interpolationAnswerNoSH = Interpolation answer with no shorthand
enterDegreeReqPoly = Enter degree of the required polynomial
generalMethodTitle = General Method
generalMethodDescription = Get the Interpolation Function using the General Method by solving a system of equations using Gaussian elimination
lagrangeTitle = Lagrange
lagrangeDescription = Get the Interpolation Function using Lagrange method using Lagrange Polynomials
NGFSTitle = Newton-Gregory Forward Subtraction
NGFSDescription = <html>Get the interpolation function using Newton-Gregory Forward Subtractions method <br> It also can get Newton-Gregory Forward Subtractions Table values</html>
NFGSUDT = The values of the upper diameter of the Newton-Gregory Forward Subtractions Table
NGBSTitle = Newton-Gregory Backward Subtraction
NGBSDescription = <html>Get the interpolation function using Newton-Gregory Backward Subtractions method <br> It also can get Newton-Gregory Backward Subtractions Table values</html>
NGBSLDT = The values of the lower diameter of the Newton-Gregory Backward Subtractions Table
NFDSTitle = Newton Forward Divided Subtractions
NFDSDescription = <html>Get the interpolation function using Newton Forward Divided Subtractions method <br> It also can get Newton Forward Divided Subtractions Table values</html>
NFDSUDT = The values of the upper diameter of the Newton Forward Divided Subtractions Table
NBDSTitle = Newton Backward Divided Subtractions
NBDSDescription = <html>Get the interpolation function using Newton Backward Divided Subtractions method <br> It also can get Newton Backward Divided Subtractions Table values</html>
NBDSLDT = The values of the lower diameter of the Newton Backward Divided Subtractions Table
leastSquaresTitle = Least-Squares
leastSquaresDescription = Get the interpolation function using Least-Squares method
splineTitle = Spline
splineDescription = Get the interpolation function using Spline method

# == Integral menu ==
integrationAnswer = Integration answer using
rectangularTitle = Rectangular
rectangularDescription = Calculate the integral using the rectangular method
trapezoidalTitle = Trapezoidal
trapezoidalDescription = Calculate the integral using the trapezoidal method
simpson3Title = Simpson 1/3
simpson3Description = Calculates the integral using Simpson's 1/3 method
simpson8Title = Simpson 3/8
simpson8Description = Calculates the integral using Simpson's 3/8 method
paulTitle = Paul
paulDescription = Calculates the integral using Paul's method

# == Differential menu ==
differentialAnswer = Differentiation answer using
enterRankDiff = Enter rank of the required differentiation
enterXDiff = Enter x value to get differentiation at it
lagrangeDiffTitle = Lagrange
lagrangeDiffDescription = Get Differential Function As Polynomial using Lagrange
NGFSDiffTitle = Newton-Gregory Forward Subtractions
NGFSDiffDescription = Get Differential Function As Polynomial using Newton-Gregory Forward Subtractions
NGBSDiffTitle = Newton-Gregory Backward Subtractions
NGFBDiffDescription = Get Differential Function As Polynomial using Newton-Gregory Backward Subtractions
CFBSTitle = Central,Forward,Backward Subtractions
CFBDescription = Calculate the differential function of a specified value using Central/Forward/Backward Subtractions
BS = Backward Subtractions
FS = Forward Subtractions
CF = Central Subtractions

# == Differential Equations menu ==
eulerTitle = Euler
eulerDescription = Solving a differential equation using the Euler method
eulerMethod = Euler's Method
taylorTitle = Taylor
taylorDescription = Solving a differential equation using the Taylor method
taylorMethod = Taylor's Method
enterNTermTylor = Enter n The number of terms in the Taylor series
enterDerivatives = Enter Derivatives
modifiedEulerTitle = Modified Euler
modifiedEulerDescription = Solving a differential equation using the Modified Euler method
midpointEuler = MidPoint Modified Euler's Method
heinTitle = Hein
heinDescription = Solving a differential equation using the Hein method
midpointHein = MidPoint Hein's Method
ralstonTitle = Ralston
ralstonDescription = Solving a differential equation using the Ralston method
midpointRalston = MidPoint Ralston's Method
rungeKuttaTitle = Runge-Kutta
rungeKuttaDescription = Solving a differential equation using the Runge-Kutta method
rungeKuttaMethod = Runge-Kutta Method

# == Non-Linear Equations menu ==
bisectionTitle = Bisection
bisectionDescription = Solving non-linear equations using the Bisection method
bisectionMethod = Bisection Method
falsePositionTitle = False Position
falsePositionDescription = Solving non-linear equations using the False Position method
falsePositionMethod = False Position Method
secantTitle = Secant
secantDescription = Solving non-linear equations using the Secant method
secantMethod = Secant Method
newtonRaphsonTitle = Newton-Raphson
newtonRaphsonDescription = Solving non-linear equations using the Newton-Raphson method
newtonRaphsonMethod = Newton-Raphson Method
halleyTitle = Halley
halleyDescription = Solving non-linear equations using the Halley method
halleyMethod = Halley's Method
fixedPointIterationTitle = Fixed Point Iteration
fixedPointIterationDescription = Solving non-linear equations using the Fixed Point Iteration method
fixedPointIterationMethod = Fixed Point Iteration Method

# == Polynomial menu ==
enterDegreePoly = Enter degree of Polynomial
enterPolys = Enter Polynomials
enterCoeffs = Enter Coefficients
hornerMethod = Horner's Method
yourPoly = Your Polynomial
valueAtTitle = Value At x
valueAtDescription = Evaluates the polynomial at the specified value of x using Horner's method
valueAtAnswer = Value at x using Horner's Method
divideOnTitle = Divide on (x - a)
divideOnDescription = Divides the polynomial by (x-a) using Horner's method and returns the resulting polynomial
divideOnAnswer =  <html> The result Polynomial by dividing on (x-a) <br> using Horner's Method :</html>
diffAtTitle = Diff at x
diffAtDescription = Calculates the value of the derivative of the polynomial at the specified value of x and rank using Horner's method
diffAtAnswer =<html> Derivative Polynomial answer at x  <br> using Horner's Method :</html>

# == expression function panel ==
generatedPoints  = Generated Points
supportedFunction = <html> Supported Functions  <br> <b>Polynomials :</b>  x^3 + 9*x^2 -5*x +10 <br>  <b>Exponential :</b>  exp(x^2) .. exp(1/x) <br>  <b>Binary Logarithm :</b>  log(3*x) .. log(-x) <br>  <b>Trigonometric Functions :</b>  sin(x),cos(x),tan(x) <br>  <b>Inverse Trigonometric Functions :</b>  asin(x),acos(x),atan(x) <br>  <b>Hyperbolic Trigonometric Functions :</b>  sinh(x),cosh(x),tanh(x) <br> </html>
enterA = Enter a - The lower bound of the x-coordinate range
enterB = Enter b - The upper bound of the x-coordinate range
enterNNumberOfPoints = Enter n - The number of points (including a and b)
enterExpFun = Enter Expression Function

# == Points Function panel ==
supportedPoints = <html> Supported Points Type  <br>  <b>BigDecimal :</b>  1.919239 <br>  <b>Integer :</b>  12392 <br>  <b>PI :</b>  pi, 2*pi, pi/4 <br> </html>
enterNXPoints = Enter n - The number of points (x points)
enterXY = Enter x and y points

# == Polynomial panel ==
supportedCoeffs = <html> Supported Coefficients Type  <br>  <b>BigDecimal :</b>  1.919239 <br>  <b>Integer :</b>  12392 <br>  <b>PI :</b>  pi, 2*pi, pi/4 <br> </html>
enterAX = Enter a - The lower bound of the x-coordinate range
enterBX = Enter b - The upper bound of the x-coordinate range

# == System of Non-Linear Equations panel ==
solutionApproximations = Solution Approximations
enterNIteration = Enter n - The number of iterations
newtonRaphsonSystemMethod = <html>System of Non-Linear Equations <br> Newton-Raphson Method <br> </html>

# == Settings ==
settingTitle = Settings
setAccuracy = Set Accuracy (the number of digits after the comma)
language = Language
setLightTheme = Set Light Theme
setDarkTheme = Set Dark Theme
restartMessage = To apply the changes, the program needs to restart. Would you like to restart now?